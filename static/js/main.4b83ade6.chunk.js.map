{"version":3,"sources":["nba.js","mlb.js","nfl.js","soccer.js","App.js","index.js"],"names":["regexPattern","NBA","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","removeGtTitle","title","replace","removeHTTP","includes","split","finalFunc","index","reg","state","redditData","filter","basketball","test","data","length","dataArr","goodText","children","body","match","goodText1","goodText2","console","log","react_default","a","createElement","href","target","className","dataObject","stateArr","dataCopy","slice","push","setState","renderList","threads","map","hit","key","created_utc","url","text","loading","comments","thread","num","num2","num3","linksArr","arr","_this2","fetch","then","response","json","_this3","commentArr","i","content","d","Date","onClick","window","open","getDay","getMonth","getDate","Component","MLB","removeGameThread","renderListOfGames","style","fontWeight","defaultQuery","NFL","sendLink","link","commentGrabber","_ref","asyncToGenerator","regenerator_default","mark","_callee","data1","data2","data3","toSend","wrap","_context","prev","next","sent","comment","JSON","stringify","doSomething","t0","stop","_x","apply","arguments","sentData","links","toString","game","link_flair_text","Soccer","soccer","App","basketballHandler","baseballHandler","footballHandler","soccerHandler","setContent","src_nba","src_mlb","nfl_NFL","soccer_Soccer","lineHeight","index_es","variant","color","backgroundColor","borderRadius","React","rootElement","document","getElementById","ReactDOM","render","App_App"],"mappings":"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","file":"static/js/main.4b83ade6.chunk.js","sourcesContent":["// jshint esversion: 6\n\nimport React from \"react\";\n//import ReactDOM from \"react-dom\";\nimport \"./nba.css\";\nimport { Component } from \"react\";\n\nconst API = \"https://www.reddit.com/r/nbastreams.json\";\nconst topStream = \"\";\nlet regexPattern = /(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[-A-Z0-9+&@#\\/%=~_|$?!:,.])*(?:\\([-A-Z0-9+&@#\\/%=~_|$?!:,.]*\\)|[A-Z0-9+&@#\\/%=~_|$])/gim;\n\nclass NBA extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redditData: [],\n      text: \"\",\n      loading: true,\n      comments: \"\",\n      thread: [],\n      num: 0,\n      num2: 0,\n      num3: 0,\n      linksArr: [],\n      dataArr: [],\n      arr: [\n        \"first link\",\n        \"second link\",\n        \"third link\",\n        \"fourth link\",\n        \"fifth link\",\n        \"sixth link\",\n        \"seventh link\"\n      ]\n    };\n  }\n\n  componentDidMount() {\n    fetch(API)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({ redditData: data.data.children, loading: false })\n      );\n  }\n\n  removeGtTitle = title => {\n    return title.replace(\"Game Thread: \", \"\");\n  };\n\n  removeHTTP = title => {\n    if (title.includes(\"https\")) {\n      let removeStart = title.replace(\"https://\", \"\");\n      let removeEnd = removeStart.split(\"/\")[0];\n      return removeEnd;\n    } else {\n      let removeStart = title.replace(\"http://\", \"\");\n      let removeEnd = removeStart.split(\"/\")[0];\n      return removeEnd;\n    }\n  };\n\n  finalFunc = index => {\n    let reg = /^Game/;\n    const threads = this.state.redditData.filter(basketball =>\n      reg.test(basketball.data.title)\n    );\n    if (threads.length === this.state.dataArr.length) {\n      //console.log('SHITSTAIN',this.state.dataArr[index][1].data.children[1].data.body);\n      let fuckyText = this.state.dataArr[index][1].data.children[1].data.body;\n      let goodText = fuckyText.match(regexPattern);\n      let fuckyText1 = this.state.dataArr[index][1].data.children[2].data.body;\n      let goodText1 = fuckyText1.match(regexPattern);\n      let fuckyText2 = this.state.dataArr[index][1].data.children[3].data.body;\n      let goodText2 = fuckyText2.match(regexPattern);\n      console.log(goodText[0]);\n\n      //console.log(JSON.stringify(this.state.dataArr[index][1].data.children))\n      return (\n        <div>\n          <a href={goodText[0]} target=\"_blank\" className=\"italicize\">\n            live link #1 ({this.removeHTTP(goodText[0])})\n          </a>\n          <br />\n          <a href={goodText1[0]} target=\"_blank\" className=\"italicize\">\n            live link #2 ({this.removeHTTP(goodText1[0])})\n          </a>\n          <br />\n          <a href={goodText2[0]} target=\"_blank\" className=\"italicize\">\n            live link #3 ({this.removeHTTP(goodText2[0])})\n          </a>\n        </div>\n      );\n    }\n  };\n\n  dataObject = data => {\n    //console.log(JSON.stringify(data));\n    //console.log(\"the first link\", this.state.num3);\n    let stateArr = this.state.dataArr;\n    let dataCopy = data.slice();\n    stateArr.push(dataCopy);\n    this.setState({ dataArr: stateArr });\n    //console.log(data);\n    //console.log(\"you beter fucking save 1:36am 3/20/19\");\n  };\n\n  componentDidUpdate() {\n    let reg = /^Game/;\n    const threads = this.state.redditData.filter(basketball =>\n      reg.test(basketball.data.title)\n    );\n    let commentArr = [];\n    if (this.state.num < threads.length) {\n      for (let i = 0; i < threads.length; i++) {\n        commentArr.push(threads[i].data.url);\n      }\n      this.setState({ num: this.state.num + 1, linksArr: commentArr });\n    }\n    //console.log(this.state.linksArr.length);\n    if (this.state.num2 < 1 && this.state.linksArr.length > 0) {\n      //do the shit in here only once\n      //allows you to update the state in the didUpdate()\n      for (let i = 0; i < this.state.linksArr.length; i++) {\n        //fetch in here each of comment links\n        //console.log(this.state.linksArr[0]);\n        fetch(this.state.linksArr[i] + \".json\")\n          .then(response => response.json())\n          .then(data => this.dataObject(data));\n        this.setState({ num3: this.state.num3 + 1 });\n      }\n      this.setState({ num2: this.state.num2 + 1 });\n    }\n    // console.log('num of threads',threads.length)\n    // console.log('num of data arr',this.state.dataArr.length)\n    if (threads.length === this.state.dataArr.length) {\n      console.log(\"cant believe you got this far\");\n      // console.log(this.state.dataArr);\n      // //the first array index value will actually be the map index\n      // console.log(this.state.dataArr[0][1].data.children[1].data.body);\n    }\n  }\n\n  renderList = threads => {\n    if (threads.length === 0) {\n      return <li> No NBA games goin on right now. Check back later! </li>;\n    } else {\n      return threads.map((hit, index) => (\n        <li key={hit.data.created_utc}>\n          <a href={hit.data.url} target=\"_blank\" className=\"boldTitle\">\n            {this.removeGtTitle(hit.data.title)}\n          </a>\n\n          {/*<div> {this.state.arr[index]} </div> */}\n          <div> {this.finalFunc(index)} </div>\n          <br />\n        </li>\n      ));\n    }\n  };\n\n  render() {\n    /*const threads = this.state.redditData.filter(\n      game => game.data.link_flair_css_class === \"gamethread\"\n    );\n    */\n    let reg = /^Game/;\n    const threads = this.state.redditData.filter(basketball =>\n      reg.test(basketball.data.title)\n    );\n    let d = new Date();\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n    let content;\n    if (this.state.loading) {\n      content = (\n        <h2 className=\"loading\">\n          {\" \"}\n          grabbing all the latest nba games, hold up! <br />\n          <br />\n          <br />\n          <div className=\"loader\"> </div>\n        </h2>\n      );\n    } else {\n      content = (\n        <div>\n          <br />\n          <h2\n            onClick={() => window.open(\"https://campusstreams.ga\")}\n            className=\"weather\"\n          >\n            {\" \"}\n            NBA Games for {days[d.getDay()]}, {months[d.getMonth()]}{\" \"}\n            {d.getDate()}\n          </h2>\n          <ol className=\"center\">{this.renderList(threads)}</ol>\n        </div>\n      );\n    }\n    return <div> {content} </div>;\n  }\n}\n\nexport default NBA;\n","import React from \"react\";\nimport \"./mlb.css\";\nimport { Component } from \"react\";\n\nconst API = \"https://www.reddit.com/r/MLBStreams.json\";\n\nclass MLB extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redditData: [],\n      defaultQuery: \"redux\",\n      text: \"\",\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    fetch(API)\n      .then(response => response.json())\n      .then(data =>\n        this.setState({ redditData: data.data.children, loading: false })\n      );\n  }\n\n  removeGameThread = title => {\n    let newTitle = title.replace(\"Game Thread: \", \"Watch the \");\n    return newTitle;\n  };\n\n  renderListOfGames = threads => {\n    if (threads.length === 0) {\n      return <div> No baseball games going on right now. Sorry bro! </div>;\n    } else {\n      return threads.map(hit => (\n        <li key={hit.data.created_utc}>\n          <a href={hit.data.url} target=\"_blank\" style={{ fontWeight: \"bold\" }}>\n            {this.removeGameThread(hit.data.title)}\n          </a>\n\n          <div className=\"italicize\">click above to find stream links</div>\n        </li>\n      ));\n    }\n  };\n\n  render() {\n    let reg = /^Game/;\n    const threads = this.state.redditData.filter(basketball =>\n      reg.test(basketball.data.title)\n    );\n    let d = new Date();\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n    let content;\n    if (this.state.loading) {\n      content = (\n        <div>\n          <h2 className=\"loading\">\n            {\" \"}\n            grabbing all the latest mlb games, hold up!!\n          </h2>\n          <div className=\"loader\" />{\" \"}\n        </div>\n      );\n    } else {\n      content = (\n        <div>\n          <h2\n            onClick={() => window.open(\"https://campusstreams.ga\")}\n            className=\"weather\"\n          >\n            {\" \"}\n            MLB Games for {days[d.getDay()]}, {months[d.getMonth()]}{\" \"}\n            {d.getDate()}\n          </h2>\n          <ol className=\"center\">{this.renderListOfGames(threads)}</ol>\n        </div>\n      );\n    }\n    return <div>{content}</div>;\n  }\n}\n\nexport default MLB;\n","import React from \"react\";\r\nimport \"./nfl.css\";\r\nimport { Component } from \"react\";\r\n\r\nconst API = \"https://www.reddit.com/r/nflstreams.json\";\r\n\r\nexport default class NFL extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redditData: [],\r\n      defaultQuery: \"redux\",\r\n      text: \"\",\r\n      loading: false,\r\n      comments: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(API)\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({ redditData: data.data.children, loading: true })\r\n      );\r\n  }\r\n  /*\r\n  commentGrabber = link => {\r\n    fetch(link)\r\n      .then(response => response.json())\r\n      .then(response => {\r\n        //console.log(response[1])\r\n        let commentsArr = response[1].data.children;\r\n        console.log(commentsArr);\r\n        let filteredComments = commentsArr.filter(comment =>\r\n          comment.data.body.includes(\"http\")\r\n        );\r\n        console.log(filteredComments);\r\n        //from here, you'll just grab the replies\r\n        //possibly do a filter to find out if theres links in the body\r\n        //then return in the fetch link\r\n        let theArr = [];\r\n        return filteredComments.map(hit =>\r\n          //<div>{JSON.stringify(hit.data.body)} </div>\r\n          //LAST WORKED OVER HERE\r\n          console.log(hit.data.body)\r\n        );\r\n      });\r\n    //bring it back with a return statement\r\n  };\r\n*/\r\n  sendLink = link => {\r\n    this.commentGrabber(link);\r\n  };\r\n\r\n  commentGrabber = async link => {\r\n    try {\r\n      const data1 = await fetch(link);\r\n      const data2 = await data1.json();\r\n      const data3 = await (function() {\r\n        console.log(\"this is the\", data2);\r\n        let commentsArr = data2[1].data.children;\r\n        let filteredComments = commentsArr.filter(comment =>\r\n          comment.data.body.includes(\"http\")\r\n        );\r\n        return filteredComments.map(hit => hit.data.body);\r\n      })();\r\n      //console.log(data3);\r\n      let toSend = JSON.stringify(data3);\r\n      this.doSomething(toSend);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  doSomething = sentData => {\r\n    //console.log(sentData);\r\n    let createString = sentData.toString();\r\n    let links = createString.match(/\\bhttps?:\\/\\/\\S+/gi);\r\n    //console.log(links);\r\n    this.setState({ comments: links.toString() });\r\n  };\r\n\r\n  renderList = threads => {\r\n    if (threads.length === 0) {\r\n      return (\r\n        <li>\r\n          {\" \"}\r\n          <div> No NFL games going on right now </div>{\" \"}\r\n        </li>\r\n      );\r\n    } else {\r\n      return threads.map(hit => (\r\n        <li key={hit.data.created_utc}>\r\n          <a href={hit.data.url} target=\"_blank\">\r\n            {hit.data.title}\r\n          </a>\r\n\r\n          <div className=\"italicize\">{this.state.comments}</div>\r\n          {this.sendLink(hit.data.url + \".json\")}\r\n        </li>\r\n      ));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const threads = this.state.redditData.filter(\r\n      game => game.data.link_flair_text === \"Game Thread\"\r\n    );\r\n\r\n    let d = new Date();\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\"\r\n    ];\r\n    let content;\r\n    if (!this.state.loading) {\r\n      content = (\r\n        <div className=\"loading\">\r\n          <br />\r\n          <br />\r\n          <h1> finding NFL games </h1>\r\n        </div>\r\n      );\r\n    } else {\r\n      content = (\r\n        <div>\r\n          <br />\r\n          <h2\r\n            onClick={() => window.open(\"https://campusstreams.ga\")}\r\n            className=\"weather\"\r\n          >\r\n            {\" \"}\r\n            NFL Games for {days[d.getDay()]}, {months[d.getMonth()]}{\" \"}\r\n            {d.getDate()}\r\n          </h2>\r\n          <ol className=\"center\">{this.renderList(threads)}</ol>\r\n          <div> </div>\r\n        </div>\r\n      );\r\n    }\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./soccer.css\";\nimport { Component } from \"react\";\n\nconst API = \"https://www.reddit.com/r/soccerstreams__/.json\";\n\nexport default class Soccer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redditData: [],\n      defaultQuery: \"redux\",\n      text: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(API)\n      .then(response => response.json())\n      .then(data => this.setState({ redditData: data.data.children }));\n  }\n\n  render() {\n    let reg = /^\\[/;\n    const threads = this.state.redditData.filter(soccer =>\n      reg.test(soccer.data.title)\n    );\n    let d = new Date();\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n\n    return (\n      <div>\n        {/*<h2> Example Shit </h2>\n        <ol>\n          {this.state.redditData.map(hit => (\n            <li key={hit.data.created_utc}>\n              <a href={hit.data.url}>{hit.data.title}</a>\n            </li>\n          ))}\n        </ol>*/}\n        <br />\n        <h2\n          onClick={() => window.open(\"https://campusstreams.ga\")}\n          className=\"weather\"\n        >\n          {\" \"}\n          Soccer Games for {days[d.getDay()]}, {months[d.getMonth()]}{\" \"}\n          {d.getDate()}\n        </h2>\n        <ol className=\"center\">\n          {threads.map(hit => (\n            <li key={hit.data.created_utc}>\n              <a\n                href={hit.data.url}\n                target=\"_blank\"\n                style={{ fontWeight: \"bold\" }}\n              >\n                {hit.data.title}\n              </a>\n\n              <div className=\"italicize\">\n                click the game above to find links\n              </div>\n            </li>\n          ))}\n        </ol>\n        <div> </div>\n      </div>\n    );\n  }\n}\n","// jshint esversion: 6\nimport React from \"react\";\nimport NBA from \"./nba.js\";\nimport MLB from \"./mlb.js\";\nimport NFL from \"./nfl.js\";\nimport Soccer from \"./soccer.js\";\nimport { Button } from \"@material-ui/core\";\nimport \"./styles.css\";\nimport ReactDOM from 'react-dom';\nimport { Component } from \"react\";\n//\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      content: \"start\"\n    };\n  }\n\n  basketballHandler = () => {\n    //\n    this.setState({ content: \"nba\" });\n  };\n  baseballHandler = () => {\n    this.setState({ content: \"mlb\" });\n  };\n  footballHandler = () => {\n    this.setState({ content: \"nfl\" });\n  };\n  soccerHandler = () => {\n    this.setState({ content: \"soccer\" });\n  };\n\n  setContent = () => {\n    if (this.state.content === \"nba\") {\n      return <NBA />;\n    } else if (this.state.content === \"mlb\") {\n      return <MLB />;\n    } else if (this.state.content === \"nfl\") {\n      return <NFL />;\n    } else if (this.state.content === \"soccer\") {\n      return <Soccer />;\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br style={{ lineHeight: \"1.5\" }} />\n        <h1>What sport you wanna watch?</h1>\n        <Button\n          variant=\"contained\"\n          style={{\n            color: \"white\",\n            backgroundColor: \"orange\",\n            borderRadius: \"40px\"\n          }}\n          onClick={this.basketballHandler}\n        >\n          Watch NBA Basketball\n        </Button>\n        &nbsp;&nbsp;\n        <br style={{lineHeight: \"1.5\"}}/>\n        <Button\n          variant=\"contained\"\n          style={{\n            color: \"white\",\n            backgroundColor: \"blue\",\n            borderRadius: \"40px\"\n          }}\n          onClick={this.baseballHandler}\n        >\n          Watch mlb baseball\n        </Button>\n        <br style={{ lineHeight: \"1.5\" }} />\n        <Button\n          variant=\"contained\"\n          style={{\n            color: \"white\",\n            backgroundColor: \"brown\",\n            borderRadius: \"40px\"\n          }}\n          onClick={this.footballHandler}\n        >\n          Watch NFL football\n        </Button>\n        &nbsp;&nbsp;\n        <br style={{lineHeight: \"1.5\"}}/>\n        <Button\n          variant=\"contained\"\n          style={{\n            color: \"white\",\n            backgroundColor: \"gray\",\n            borderRadius: \"40px\"\n          }}\n          onClick={this.soccerHandler}\n        >\n          Watch Soccer\n        </Button>\n        <br style={{ lineHeight: \"3\" }} />\n        {this.setContent()}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}